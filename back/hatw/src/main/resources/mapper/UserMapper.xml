<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.HATW.mapper.UserMapper">

    <select id="findAll" parameterType="com.HATW.dto.UserDTO">
        SELECT *
        FROM users
    </select>
    <!-- 2) 단일 조회 -->
    <select id="findByUserId"
            parameterType="string"
            resultType="com.HATW.dto.UserDTO">
        SELECT *
        FROM users
        WHERE userId = #{userId}
    </select>

    <!-- 3) INSERT: 새 사용자 등록 -->
    <insert id="insertUser" parameterType="com.HATW.dto.UserDTO">
        INSERT INTO users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            userId,
            ssn1,
            ssn2,
            name,
            passwordHash,
            phone,
            <if test="isActive != null">isActive,</if>
            <if test="createdAt != null">createdAt,</if>
            <if test="updatedAt != null">updatedAt,</if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            #{userId},
            #{ssn1},
            #{ssn2},
            #{name},
            #{passwordHash},
            #{phone},
            <if test="isActive != null">#{isActive},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
        </trim>
    </insert>

    <!-- 4) UPDATE: 사용자 정보 수정 -->
    <update id="update"
            parameterType="com.HATW.dto.UserDTO">
        UPDATE users
        SET name         = #{name},
            passwordHash = #{passwordHash},
            phone        = #{phone},
            isActive     = #{isActive},
            updatedAt    = #{updatedAt}
        WHERE userId = #{userId}
    </update>

    <!-- 5) DELETE: 사용자 삭제 -->
    <delete id="delete"
            parameterType="string">
        DELETE FROM users
        WHERE userId = #{userId}
    </delete>

    <!--    ID 중복 확인    -->
    <select id="existsByUserId" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM users WHERE userId = #{userId}
    </select>

    <insert id="insertKakaoUser" parameterType="com.HATW.dto.UserDTO">
        INSERT INTO users
            (userId, passwordHash, name, ssn1, ssn2, phone, isActive, createdAt)
        VALUES
            (#{userId}, #{passwordHash}, #{name}, #{ssn1}, #{ssn2}, #{phone}, #{isActive}, #{createdAt})
    </insert>
    
    <select id="findByIdAndPhone" resultType="com.HATW.dto.UserDTO">
        SELECT * FROM users
        WHERE userId = #{userId}
          AND phone = #{phone}
    </select>

    <update id="updatePassword">
        UPDATE users
        SET passwordHash = #{passwordHash}
        WHERE userId = #{userId}
    </update>

    <resultMap id="userResultMap" type="com.HATW.dto.UserDTO">
        <id property="idx" column="idx" />
        <result property="userId" column="user_id" />
        <result property="ssn1" column="ssn1" />
        <result property="ssn2" column="ssn2" />
        <result property="name" column="name" />
        <result property="passwordHash" column="password_hash" />
        <result property="phone" column="phone" />
        <result property="isActive" column="is_active" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <result property="isAdmin" column="is_admin" />
        <result property="nick" column="nick" />
    </resultMap>

    <!--    ID 찾기-->
    <select id="findByNameAndPhone" resultType="com.HATW.dto.UserDTO">
        SELECT * FROM users
        WHERE name = #{name}
          AND phone = #{phone}
    </select>

    <update id="updateActive">
        UPDATE users
        SET isActive  = #{isActive}
        WHERE userId   = #{userId}
    </update>
</mapper>
